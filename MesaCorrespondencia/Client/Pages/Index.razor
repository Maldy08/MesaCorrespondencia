@page "/"
@inject IAuthService _authService
@inject ILocalStorageService LocalStorage
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@inject AppState appState
@implements IDisposable



<PageTitle>Principal</PageTitle>
@if(appState.Ejercicio != 0)
{
    <TableOficiosRecibidos selectedEventCallback="@selectedEmpleado" Title="Ultimos Recibidos" eor="2" ejercicio="@appState.Ejercicio" empleado="@empleado" depto="@depto" />
    <br />
    <br />
    <TableOficiosEnviados selectedEventCallback="@selectedEmpleado" Title="Ultimos Enviados" eor="1" ejercicio="@appState.Ejercicio" empleado="@empleado" depto="@depto" />
}

@*<MudButton OnClick="ingresar" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Send" Color="Color.Primary">Ingresar oficio recibido</MudButton>*@
      


@*<MudText Typo="Typo.h3" GutterBottom="true">Hello, world!</MudText>
<MudText Class="mb-8"></MudText>
<MudAlert Severity="Severity.Normal">You can find documentation and examples on our website here: <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit"><b>www.mudblazor.com</b></MudLink></MudAlert>
*@
@code{
    private int empleado;
    private int depto;
    private VwOficiosLista vwOficiosLista;

    protected async override Task OnInitializedAsync()
    {
        appState.OnChange += StateHasChanged;
        if(appState.Ejercicio!=0)
        {
            await LoadData();
        }
        else
        {
            var _ejercicio = await LocalStorage.GetItemAsync<int>("MC__ejercicio");
            if( _ejercicio!= 99)
            {
                appState.Ejercicio = _ejercicio;
                await LoadData();
            }
            else
            {
                NavigationManager.NavigateTo("/ejercicio");
            }
        }

            
        //if (await _authService.IsUserAuthenticated())
        //{
        //    await _authService.GetUserInfo();
        //    var usuario = _authService.usuario;
        //}
        //else
        //    Console.WriteLine("no authenticado");
    }

    private async Task LoadData()
    {
        empleado = await LocalStorage.GetItemAsync<int>("empleado");
        depto = await LocalStorage.GetItemAsync<int>("depto");
    }

    private void selectedEmpleado(VwOficiosLista element)
    {
        vwOficiosLista = element;
    }

    public void Dispose() => appState.OnChange -= StateHasChanged;

}