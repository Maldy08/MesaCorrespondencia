@page "/login"
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Login</PageTitle>
<MudItem lg="12" Class="d-flex align-center justify-center mud-width-full py-8">
    <MudImage Src="images/logoLoginBC.png" Height="164" Width="378" />
</MudItem>

<EditForm Model="user" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <MudGrid Justify="Justify.Center">
        <MudItem lg="4" xs="8" md="6">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Usuario" @bind-Value="user.Usuario"
                        For="@(() => user.Usuario)"/>
                    <MudTextField InputType="InputType.Password" Label="Password" @bind-Value="user.Password"
                        For="@(() => user.Password)"/>
                </MudCardContent>
                <MudCardActions >
                    <MudButton FullWidth ButtonType="ButtonType.Submit" Variant="Variant.Filled"
                        Style="background-color: #6a1b31; color:white;"  Class="ml-auto">Ingresar</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
    @*<section class="py-5">
        <div class="p-5 text-center">
            <img src="images/logoLoginBC.png" alt="" width="378" height="164" class="d-inline-block align-text-bottom">
        </div>
        <div class="container">
            <div class="row">
                <div class="col-12 col-lg-5 mx-auto">
                    <div class="p-5 bg-light rounded text-center">

                        <InputText id="usuario" @bind-Value="user.Usuario" class="form-control mb-2" placeholder="usuario" />
                        <ValidationMessage For="@(() => user.Usuario)" />
                        <InputText id="password" @bind-Value="user.Password" class="form-control mb-2" type="password" placeholder="******" />
                        <ValidationMessage For="@(() => user.Password)" />

                        <button class="btn py-2 w-100 mb-2 text-white" style="background-color: #6a1b31;">Iniciar Sesión</button>
                        

                    </div>
                </div>
            </div>
        </div>
        <div class=text-danger>
            <span> @errorMessage</span>
        </div>
    </section>*@
</EditForm>

@code {
    private UserLogin user = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.Success)
        {
            errorMessage = string.Empty;
            await LocalStorage.SetItemAsync("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            await SetUserInfo();
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = result.Message;
        }
    }

    private async Task SetUserInfo()
    {
        await AuthService.GetUserInfo();
        await LocalStorage.SetItemAsync("depto", AuthService.usuario.Depto.ToString());
        await LocalStorage.SetItemAsync("depto-descripcion", AuthService.usuario.DeptoDescripcion);
        await LocalStorage.SetItemAsync("puesto", AuthService.usuario.IdPue);
        await LocalStorage.SetItemAsync("puesto-descripcion", AuthService.usuario.Descripcion);
        await LocalStorage.SetItemAsync("empleado", AuthService.usuario.NoEmpleado);
        await LocalStorage.SetItemAsync("nivel", AuthService.usuario.OficiosNivel);

    }

}
