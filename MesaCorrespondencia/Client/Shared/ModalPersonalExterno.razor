@inject IOficioService OficioService
@inject IAuthService AuthService
<style>
    .botones-accion{
         background-color:#6A1B32;
         color:white;
}

.botones-accion:hover{
    background-color: #6A1B72
}


</style>
<MudDialog>
    <DialogContent>
        <MudTable T="OficiosUsuext"  
            Items="@Elements" 
            Hover="true" 
            Dense="true"
            Striped="true"
            Breakpoint="Breakpoint.Sm" 
            Filter="new Func<OficiosUsuext,bool>(FilterFunc1)" 
            RowClassFunc="@SelectedRowClassFunc"
            @ref="mudTable" 
            @ondblclick="@Submit"
            LoadingProgressColor="Color.Info">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Personal Externo</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>NOMBRE DE LA PERSONA</MudTh>
                <MudTh>EMPRESA / DEPENDENCIA</MudTh>
                <MudTh>PUESTO</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nombre de la Persona">@context.Nombre</MudTd>
                <MudTd DataLabel="Departamento">@context.Empresa</MudTd>
                <MudTd DataLabel="Cargo">@context.Cargo</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{10}" RowsPerPageString="Folios por pág." />
            </PagerContent>
        </MudTable>
    </DialogContent>
    <DialogActions>
        <MudButton ButtonType="ButtonType.Submit" Class="botones-accion" OnClick="@Cancel" >Cancelar</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Class="botones-accion" OnClick="@Submit" >Guardar</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
    private MudTable<OficiosUsuext> mudTable;
    private string searchString1 = "";
    private int selectedRowNumber = -1;
    private bool _multiSelect = false;
    private IEnumerable<OficiosUsuext> Elements = new List<OficiosUsuext>();

    protected  override async Task OnInitializedAsync()
    {

        Elements = await OficioService.GetOficioUsuextAll();
    }

    private bool FilterFunc1(OficiosUsuext element) => FilterFunc(element, searchString1);
    private bool FilterFunc(OficiosUsuext element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Nombre.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Empresa.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Nombre} {element.Empresa} {element.Cargo}".Contains(searchString))
            return true;
        return false;
    }

        private string SelectedRowClassFunc(OficiosUsuext element, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(element))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
}
