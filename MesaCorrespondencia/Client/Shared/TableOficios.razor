@inject IOficioService OficioService
@inject ILocalStorageService LocalStorage
@inject IAuthService AuthService


<MudTable Items="@vwOficiosListas" Filter="new Func<VwOficiosLista, bool>(FilterFunc1)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">@Title</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>ACCIONES</MudTh>
        <MudTh>NO. FOLIO</MudTh>
        <MudTh>FECHA</MudTh>
        <MudTh>DEPENDENCIA</MudTh>
        <MudTh>TIPO</MudTh>
        <MudTh>NO. DE OFICIO</MudTh>
        <MudTh>REMITENTE</MudTh>
        <MudTh>DESTINATARIO</MudTh>
        <MudTh>ESTATUS</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ACCIONES">ACCIONES</MudTd>
        <MudTd DataLabel="NO. FOLIO">       
            <p class="fs-6">@context.Folio</p>
            </MudTd>
        <MudTd DataLabel="FECHA">@context.Fecha</MudTd>
        <MudTd DataLabel="DEPENDENCIA">
            <p class="fs-10">@context.RemDepen</p>
            </MudTd>
        <MudTd DataLabel="TIPO">@context.Tipo</MudTd>
        <MudTd DataLabel="NO. DE OFICIO">@context.NoOficio</MudTd>
        <MudTd DataLabel="REMITENTE">@context.RemNombre</MudTd>
        <MudTd DataLabel="DESTINATARIO">@context.DestNombre</MudTd>
        <MudTd DataLabel="ESTATUS">@context.Estatus</MudTd>
    </RowTemplate>

    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{25,50, 100}" />
    </PagerContent>
</MudTable>

@code {
    private List<VwOficiosLista> vwOficiosListas = new();
    [Parameter]
    public int eor { get; set; }
    [Parameter]
    public int ejercicio { get; set; }
    [Parameter]
    public int empleado { get; set; }
    [Parameter]
    public int depto { get; set; }
    [Parameter]
    public string Title { get; set; }
    private string searchString1 = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        //var nivel = await LocalStorage.GetItemAsync<int>("nivel");
        if(await AuthService.IsUserInRoleMc())
            vwOficiosListas = await OficioService.OficiosLista(eor);
        else
            vwOficiosListas = await OficioService.OficiosLista(eor,ejercicio,empleado,depto);
      
    }

    private bool FilterFunc1(VwOficiosLista element) => FilterFunc(element, searchString1);

    private bool FilterFunc(VwOficiosLista element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.RemNombre.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.DestNombre.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Folio} {element.Fecha} {element.RemDepen} {element.Tipo} {element.NoOficio} {element.RemNombre} {element.DestNombre} {element.Estatus}".Contains(searchString))
            return true;
        return false;
    }

}
